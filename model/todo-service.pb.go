// Code generated by protoc-gen-go. DO NOT EDIT.
// source: todo-service.proto

package model

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Todo struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`
	Description          string   `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	Completed            bool     `protobuf:"varint,3,opt,name=Completed,proto3" json:"Completed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Todo) Reset()         { *m = Todo{} }
func (m *Todo) String() string { return proto.CompactTextString(m) }
func (*Todo) ProtoMessage()    {}
func (*Todo) Descriptor() ([]byte, []int) {
	return fileDescriptor_80b701c7b1c502fe, []int{0}
}

func (m *Todo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Todo.Unmarshal(m, b)
}
func (m *Todo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Todo.Marshal(b, m, deterministic)
}
func (m *Todo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Todo.Merge(m, src)
}
func (m *Todo) XXX_Size() int {
	return xxx_messageInfo_Todo.Size(m)
}
func (m *Todo) XXX_DiscardUnknown() {
	xxx_messageInfo_Todo.DiscardUnknown(m)
}

var xxx_messageInfo_Todo proto.InternalMessageInfo

func (m *Todo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Todo) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Todo) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Todo) GetCompleted() bool {
	if m != nil {
		return m.Completed
	}
	return false
}

type GetTodos struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTodos) Reset()         { *m = GetTodos{} }
func (m *GetTodos) String() string { return proto.CompactTextString(m) }
func (*GetTodos) ProtoMessage()    {}
func (*GetTodos) Descriptor() ([]byte, []int) {
	return fileDescriptor_80b701c7b1c502fe, []int{1}
}

func (m *GetTodos) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTodos.Unmarshal(m, b)
}
func (m *GetTodos) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTodos.Marshal(b, m, deterministic)
}
func (m *GetTodos) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTodos.Merge(m, src)
}
func (m *GetTodos) XXX_Size() int {
	return xxx_messageInfo_GetTodos.Size(m)
}
func (m *GetTodos) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTodos.DiscardUnknown(m)
}

var xxx_messageInfo_GetTodos proto.InternalMessageInfo

type TodoID struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TodoID) Reset()         { *m = TodoID{} }
func (m *TodoID) String() string { return proto.CompactTextString(m) }
func (*TodoID) ProtoMessage()    {}
func (*TodoID) Descriptor() ([]byte, []int) {
	return fileDescriptor_80b701c7b1c502fe, []int{2}
}

func (m *TodoID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TodoID.Unmarshal(m, b)
}
func (m *TodoID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TodoID.Marshal(b, m, deterministic)
}
func (m *TodoID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TodoID.Merge(m, src)
}
func (m *TodoID) XXX_Size() int {
	return xxx_messageInfo_TodoID.Size(m)
}
func (m *TodoID) XXX_DiscardUnknown() {
	xxx_messageInfo_TodoID.DiscardUnknown(m)
}

var xxx_messageInfo_TodoID proto.InternalMessageInfo

func (m *TodoID) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type TodoResponse struct {
	Todo                 *Todo    `protobuf:"bytes,3,opt,name=Todo,proto3" json:"Todo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TodoResponse) Reset()         { *m = TodoResponse{} }
func (m *TodoResponse) String() string { return proto.CompactTextString(m) }
func (*TodoResponse) ProtoMessage()    {}
func (*TodoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_80b701c7b1c502fe, []int{3}
}

func (m *TodoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TodoResponse.Unmarshal(m, b)
}
func (m *TodoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TodoResponse.Marshal(b, m, deterministic)
}
func (m *TodoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TodoResponse.Merge(m, src)
}
func (m *TodoResponse) XXX_Size() int {
	return xxx_messageInfo_TodoResponse.Size(m)
}
func (m *TodoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TodoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TodoResponse proto.InternalMessageInfo

func (m *TodoResponse) GetTodo() *Todo {
	if m != nil {
		return m.Todo
	}
	return nil
}

type TodosResponse struct {
	Todos                []*Todo  `protobuf:"bytes,3,rep,name=Todos,proto3" json:"Todos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TodosResponse) Reset()         { *m = TodosResponse{} }
func (m *TodosResponse) String() string { return proto.CompactTextString(m) }
func (*TodosResponse) ProtoMessage()    {}
func (*TodosResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_80b701c7b1c502fe, []int{4}
}

func (m *TodosResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TodosResponse.Unmarshal(m, b)
}
func (m *TodosResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TodosResponse.Marshal(b, m, deterministic)
}
func (m *TodosResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TodosResponse.Merge(m, src)
}
func (m *TodosResponse) XXX_Size() int {
	return xxx_messageInfo_TodosResponse.Size(m)
}
func (m *TodosResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TodosResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TodosResponse proto.InternalMessageInfo

func (m *TodosResponse) GetTodos() []*Todo {
	if m != nil {
		return m.Todos
	}
	return nil
}

func init() {
	proto.RegisterType((*Todo)(nil), "model.Todo")
	proto.RegisterType((*GetTodos)(nil), "model.GetTodos")
	proto.RegisterType((*TodoID)(nil), "model.TodoID")
	proto.RegisterType((*TodoResponse)(nil), "model.TodoResponse")
	proto.RegisterType((*TodosResponse)(nil), "model.TodosResponse")
}

func init() { proto.RegisterFile("todo-service.proto", fileDescriptor_80b701c7b1c502fe) }

var fileDescriptor_80b701c7b1c502fe = []byte{
	// 291 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0xcd, 0x6e, 0x82, 0x40,
	0x10, 0x8e, 0x28, 0x16, 0x3f, 0x6a, 0x9b, 0x6c, 0x3d, 0x6c, 0x4c, 0x93, 0x52, 0x4e, 0x5e, 0x84,
	0x14, 0x9f, 0xa0, 0x91, 0xc6, 0x70, 0xe8, 0x85, 0xfa, 0x02, 0xd6, 0x9d, 0x03, 0xe9, 0xea, 0x12,
	0xd8, 0xf4, 0xcd, 0xfa, 0x7e, 0x0d, 0x83, 0x56, 0x62, 0x6a, 0xe2, 0x6d, 0xe7, 0xfb, 0x99, 0x6f,
	0x66, 0x00, 0xc2, 0x1a, 0x65, 0xe6, 0x35, 0x55, 0xdf, 0xc5, 0x96, 0xa2, 0xb2, 0x32, 0xd6, 0x08,
	0x77, 0x67, 0x14, 0xe9, 0x50, 0x63, 0xb0, 0x36, 0xca, 0x88, 0x3b, 0x38, 0x99, 0x92, 0xbd, 0xa0,
	0x37, 0x1b, 0xe5, 0x4e, 0xa6, 0xc4, 0x04, 0xee, 0xba, 0xb0, 0x9a, 0xa4, 0xc3, 0x50, 0x5b, 0x88,
	0x00, 0x7e, 0x4a, 0xf5, 0xb6, 0x2a, 0x4a, 0x5b, 0x98, 0xbd, 0x1c, 0x30, 0xd7, 0x85, 0xc4, 0x23,
	0x46, 0x4b, 0xb3, 0x2b, 0x35, 0x59, 0x52, 0xb2, 0x1f, 0xf4, 0x66, 0x5e, 0x7e, 0x02, 0x42, 0xc0,
	0x5b, 0x91, 0x6d, 0x02, 0xeb, 0x50, 0x62, 0xd8, 0x3c, 0xb2, 0xf4, 0x3c, 0x3b, 0x8c, 0x71, 0xdb,
	0x30, 0x39, 0xd5, 0xa5, 0xd9, 0xd7, 0x24, 0x9e, 0xda, 0x19, 0xb9, 0x9d, 0x9f, 0xf8, 0x11, 0x4f,
	0x1e, 0xb1, 0x84, 0x89, 0x30, 0xc1, 0x98, 0x7b, 0xfe, 0x39, 0x9e, 0xe1, 0x32, 0x20, 0xfb, 0x41,
	0xff, 0xdc, 0xd2, 0x32, 0xc9, 0x8f, 0x03, 0xbf, 0x79, 0x7d, 0xb4, 0x57, 0x11, 0x31, 0xb0, 0xac,
	0x68, 0x63, 0x89, 0xcf, 0xd1, 0x75, 0x4c, 0x27, 0x9d, 0xe2, 0x94, 0x31, 0xc7, 0xcd, 0x61, 0x17,
	0x31, 0xee, 0x08, 0xb2, 0x74, 0xfa, 0xd0, 0x8d, 0x3b, 0xca, 0x17, 0xc0, 0x8a, 0xec, 0xab, 0xd6,
	0xec, 0xb8, 0x3f, 0x48, 0x8e, 0xd7, 0xb8, 0x90, 0x11, 0xc3, 0x7b, 0xdf, 0x54, 0x5f, 0xff, 0x85,
	0x5c, 0x1a, 0xca, 0x7b, 0x53, 0x85, 0xbd, 0x76, 0x87, 0x17, 0x20, 0xa5, 0xe6, 0xd3, 0x5c, 0x9d,
	0xf0, 0x39, 0xe4, 0xdf, 0x67, 0xf1, 0x1b, 0x00, 0x00, 0xff, 0xff, 0xd7, 0x5b, 0x89, 0x8f, 0x54,
	0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TodoServiceClient is the client API for TodoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TodoServiceClient interface {
	CreateTodo(ctx context.Context, in *Todo, opts ...grpc.CallOption) (*TodosResponse, error)
	GetTodo(ctx context.Context, in *TodoID, opts ...grpc.CallOption) (*TodoResponse, error)
	GetAllTodo(ctx context.Context, in *GetTodos, opts ...grpc.CallOption) (*TodosResponse, error)
	MarkTodo(ctx context.Context, in *TodoID, opts ...grpc.CallOption) (*TodosResponse, error)
	EditTodo(ctx context.Context, in *Todo, opts ...grpc.CallOption) (*TodosResponse, error)
	DeleteTodo(ctx context.Context, in *TodoID, opts ...grpc.CallOption) (*TodosResponse, error)
}

type todoServiceClient struct {
	cc *grpc.ClientConn
}

func NewTodoServiceClient(cc *grpc.ClientConn) TodoServiceClient {
	return &todoServiceClient{cc}
}

func (c *todoServiceClient) CreateTodo(ctx context.Context, in *Todo, opts ...grpc.CallOption) (*TodosResponse, error) {
	out := new(TodosResponse)
	err := c.cc.Invoke(ctx, "/model.TodoService/CreateTodo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoServiceClient) GetTodo(ctx context.Context, in *TodoID, opts ...grpc.CallOption) (*TodoResponse, error) {
	out := new(TodoResponse)
	err := c.cc.Invoke(ctx, "/model.TodoService/GetTodo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoServiceClient) GetAllTodo(ctx context.Context, in *GetTodos, opts ...grpc.CallOption) (*TodosResponse, error) {
	out := new(TodosResponse)
	err := c.cc.Invoke(ctx, "/model.TodoService/GetAllTodo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoServiceClient) MarkTodo(ctx context.Context, in *TodoID, opts ...grpc.CallOption) (*TodosResponse, error) {
	out := new(TodosResponse)
	err := c.cc.Invoke(ctx, "/model.TodoService/MarkTodo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoServiceClient) EditTodo(ctx context.Context, in *Todo, opts ...grpc.CallOption) (*TodosResponse, error) {
	out := new(TodosResponse)
	err := c.cc.Invoke(ctx, "/model.TodoService/EditTodo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoServiceClient) DeleteTodo(ctx context.Context, in *TodoID, opts ...grpc.CallOption) (*TodosResponse, error) {
	out := new(TodosResponse)
	err := c.cc.Invoke(ctx, "/model.TodoService/DeleteTodo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TodoServiceServer is the server API for TodoService service.
type TodoServiceServer interface {
	CreateTodo(context.Context, *Todo) (*TodosResponse, error)
	GetTodo(context.Context, *TodoID) (*TodoResponse, error)
	GetAllTodo(context.Context, *GetTodos) (*TodosResponse, error)
	MarkTodo(context.Context, *TodoID) (*TodosResponse, error)
	EditTodo(context.Context, *Todo) (*TodosResponse, error)
	DeleteTodo(context.Context, *TodoID) (*TodosResponse, error)
}

// UnimplementedTodoServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTodoServiceServer struct {
}

func (*UnimplementedTodoServiceServer) CreateTodo(ctx context.Context, req *Todo) (*TodosResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTodo not implemented")
}
func (*UnimplementedTodoServiceServer) GetTodo(ctx context.Context, req *TodoID) (*TodoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTodo not implemented")
}
func (*UnimplementedTodoServiceServer) GetAllTodo(ctx context.Context, req *GetTodos) (*TodosResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllTodo not implemented")
}
func (*UnimplementedTodoServiceServer) MarkTodo(ctx context.Context, req *TodoID) (*TodosResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MarkTodo not implemented")
}
func (*UnimplementedTodoServiceServer) EditTodo(ctx context.Context, req *Todo) (*TodosResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditTodo not implemented")
}
func (*UnimplementedTodoServiceServer) DeleteTodo(ctx context.Context, req *TodoID) (*TodosResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTodo not implemented")
}

func RegisterTodoServiceServer(s *grpc.Server, srv TodoServiceServer) {
	s.RegisterService(&_TodoService_serviceDesc, srv)
}

func _TodoService_CreateTodo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Todo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServiceServer).CreateTodo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.TodoService/CreateTodo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServiceServer).CreateTodo(ctx, req.(*Todo))
	}
	return interceptor(ctx, in, info, handler)
}

func _TodoService_GetTodo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TodoID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServiceServer).GetTodo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.TodoService/GetTodo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServiceServer).GetTodo(ctx, req.(*TodoID))
	}
	return interceptor(ctx, in, info, handler)
}

func _TodoService_GetAllTodo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTodos)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServiceServer).GetAllTodo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.TodoService/GetAllTodo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServiceServer).GetAllTodo(ctx, req.(*GetTodos))
	}
	return interceptor(ctx, in, info, handler)
}

func _TodoService_MarkTodo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TodoID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServiceServer).MarkTodo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.TodoService/MarkTodo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServiceServer).MarkTodo(ctx, req.(*TodoID))
	}
	return interceptor(ctx, in, info, handler)
}

func _TodoService_EditTodo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Todo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServiceServer).EditTodo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.TodoService/EditTodo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServiceServer).EditTodo(ctx, req.(*Todo))
	}
	return interceptor(ctx, in, info, handler)
}

func _TodoService_DeleteTodo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TodoID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServiceServer).DeleteTodo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.TodoService/DeleteTodo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServiceServer).DeleteTodo(ctx, req.(*TodoID))
	}
	return interceptor(ctx, in, info, handler)
}

var _TodoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "model.TodoService",
	HandlerType: (*TodoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTodo",
			Handler:    _TodoService_CreateTodo_Handler,
		},
		{
			MethodName: "GetTodo",
			Handler:    _TodoService_GetTodo_Handler,
		},
		{
			MethodName: "GetAllTodo",
			Handler:    _TodoService_GetAllTodo_Handler,
		},
		{
			MethodName: "MarkTodo",
			Handler:    _TodoService_MarkTodo_Handler,
		},
		{
			MethodName: "EditTodo",
			Handler:    _TodoService_EditTodo_Handler,
		},
		{
			MethodName: "DeleteTodo",
			Handler:    _TodoService_DeleteTodo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "todo-service.proto",
}
